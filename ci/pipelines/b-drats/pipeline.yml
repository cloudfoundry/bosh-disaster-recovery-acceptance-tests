---
vault_creds: &vault_creds
  url: ((vault/server.url))
  role_id: ((vault/resource_credentials.role_id))
  secret_id: ((vault/resource_credentials.secret_id))

resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource
    tag: latest

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

- name: vault
  type: docker-image
  source:
    repository: wfernandes/vault-resource
    tag: latest

resources:
- name: bosh-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment.git

- name: jumpbox-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/jumpbox-deployment.git

- name: bosh-disaster-recovery-acceptance-tests-prs
  type: pull-request
  source:
    repository: cloudfoundry-incubator/bosh-disaster-recovery-acceptance-tests
    access_token: ((github.access_token))

- name: bbr-binary-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github.access_token))

- name: terraform
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: bbr-terraform-states
      prefix: terraform-state.tfstate
      credentials: ((gcp/service_accounts/bucket_owner.json_key))

- name: gcs-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-jammy-go_agent

- name: six-hours
  type: time
  source:
    interval: 6h
    start: 9:00 AM
    stop: 5:00 PM
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]

- name: bosh-state-b-drats
  type: vault
  source:
    <<: *vault_creds
    path: /concourse/common/infrastructure/bosh/b-drats
    tarball: true

jobs:
- name: deploy-b-drats-prs
  serial: true
  serial_groups: [prs]
  plan:
  - get: six-hours
    trigger: true
  - in_parallel:
    - get: bosh-deployment
    - get: jumpbox-deployment
    - get: bosh-disaster-recovery-acceptance-tests-prs
      trigger: true
      version: every
    - get: bosh-state-b-drats
  - put: bosh-disaster-recovery-acceptance-tests-prs
    params:
      path: bosh-disaster-recovery-acceptance-tests-prs
      status: pending
      context: b-drats
  - put: terraform
    params:
      terraform_source: bosh-disaster-recovery-acceptance-tests-prs/ci/infrastructure/terraform/gcp/
      env_name: b-drats-prs
      delete_on_failure: true
      vars:
        environment_name: b-drats-prs
        gcp_service_account_key: ((gcp/service_accounts/infrastructure.json_key))
    get_params:
      output_statefile: true
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats
  - task: jumpbox-create-env
    file: bosh-disaster-recovery-acceptance-tests-prs/ci/tasks/jumpbox-operation/task.yml
    input_mapping:
      bosh-state: bosh-state-b-drats
      terraform-state: terraform
    params:
      ENVIRONMENT_NAME: "b-drats-prs/jumpbox"
      BOSH_OPERATION: "create-env"
      GCP_SERVICE_ACCOUNT_KEY: ((bosh_director.json_key))
    ensure:
      put: bosh-state-b-drats
      params:
        data: bosh-state-updated
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats
  - task: bosh-create-env
    file: bosh-disaster-recovery-acceptance-tests-prs/ci/tasks/bosh-operation/task.yml
    input_mapping:
      bosh-state: bosh-state-b-drats
      terraform-state: terraform
    params:
      ENVIRONMENT_NAME: "b-drats-prs/director"
      JUMPBOX_ENVIRONMENT_NAME: "b-drats-prs/jumpbox"
      DIRECTOR_NAME: "b-drats-prs"
      BOSH_OPERATION: "create-env"
      GCP_SERVICE_ACCOUNT_KEY: ((bosh_director.json_key))
    ensure:
      put: bosh-state-b-drats
      params:
        data: bosh-state-updated
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats
  - task: update-b-drats-cloud-config
    file: bosh-disaster-recovery-acceptance-tests-prs/ci/tasks/update-b-drats-cloud-config/task.yml
    input_mapping:
      cloud-config: bosh-deployment
      terraform-state: terraform
      bosh-vars-store: bosh-state-b-drats
    params:
      CLOUD_CONFIG_PATH: gcp/cloud-config.yml
      BOSH_VARS_STORE_PATH: b-drats-prs/director/creds.yml
      BOSH_CLIENT: admin
      JUMPBOX_VARS_STORE_PATH: b-drats-prs/jumpbox/creds.yml
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats
  - task: update-b-drats-resurrection
    file: bosh-disaster-recovery-acceptance-tests-prs/ci/tasks/update-b-drats-resurrection/task.yml
    input_mapping:
      terraform-state: terraform
      bosh-vars-store: bosh-state-b-drats
    params:
      RESURRECTION: "off"
      BOSH_VARS_STORE_PATH: b-drats-prs/director/creds.yml
      JUMPBOX_VARS_STORE_PATH: b-drats-prs/jumpbox/creds.yml
      BOSH_CLIENT: admin
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats

- name: run-b-drats-prs
  serial: true
  serial_groups: [prs]
  plan:
  - get: six-hours
    passed:
    - deploy-b-drats-prs
  - in_parallel:
    - get: bosh-disaster-recovery-acceptance-tests-prs
      passed: [deploy-b-drats-prs]
      trigger: true
      version: every
    - get: bosh-deployment
      passed: [deploy-b-drats-prs]
      trigger: true
    - get: jumpbox-deployment
      passed: [deploy-b-drats-prs]
    - get: bbr-binary-release
      trigger: true
    - get: terraform
      passed: [deploy-b-drats-prs]
      params:
        output_statefile: true
    - get: gcs-stemcell
    - get: bosh-state-b-drats
  - put: bosh-disaster-recovery-acceptance-tests-prs
    params:
      path: bosh-disaster-recovery-acceptance-tests-prs
      status: pending
      context: b-drats
  - task: extract-b-drats-integration-config
    file: bosh-disaster-recovery-acceptance-tests-prs/ci/tasks/extract-b-drats-integration-config/task.yml
    input_mapping:
      terraform-state: terraform
      bosh-vars-store: bosh-state-b-drats
      stemcell: gcs-stemcell
    params:
      BOSH_VARS_STORE_PATH: b-drats-prs/director/creds.yml
      CREDHUB_SERVER: https://10.0.0.6:8844
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats
  - task: run-b-drats
    privileged: true
    file: bosh-disaster-recovery-acceptance-tests-prs/ci/tasks/run-b-drats/task.yml
    params:
      JUMPBOX_VARS_STORE_PATH: b-drats-prs/jumpbox/creds.yml
    input_mapping:
      bosh-disaster-recovery-acceptance-tests: bosh-disaster-recovery-acceptance-tests-prs
      bosh-vars-store: bosh-state-b-drats
      terraform-state: terraform
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats
    on_success:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: success
        context: b-drats

- name: destroy-b-drats-prs
  serial: true
  serial_groups: [prs]
  plan:
  - get: six-hours
    passed:
      - run-b-drats-prs
  - in_parallel:
    - get: bosh-deployment
      passed: [run-b-drats-prs]
      trigger: true
    - get: jumpbox-deployment
      passed: [run-b-drats-prs]
    - get: terraform
      passed: [run-b-drats-prs]
      params:
        output_statefile: true
    - get: bbr-binary-release
      trigger: true
      passed: [run-b-drats-prs]
    - get: bosh-disaster-recovery-acceptance-tests-prs
      passed: [run-b-drats-prs]
      trigger: true
      version: every
    - get: bosh-state-b-drats
  - task: bosh-delete-env
    file: bosh-disaster-recovery-acceptance-tests-prs/ci/tasks/bosh-operation/task.yml
    input_mapping:
      bosh-state: bosh-state-b-drats
      terraform-state: terraform
    params:
      ENVIRONMENT_NAME: "b-drats-prs/director"
      JUMPBOX_ENVIRONMENT_NAME: "b-drats-prs/jumpbox"
      DIRECTOR_NAME: "b-drats-prs"
      BOSH_OPERATION: "delete-env"
      GCP_SERVICE_ACCOUNT_KEY: ((bosh_director.json_key))
    ensure:
      put: bosh-state-b-drats
      params:
        data: bosh-state-updated
  - task: jumpbox-delete-env
    file: bosh-disaster-recovery-acceptance-tests-prs/ci/tasks/jumpbox-operation/task.yml
    input_mapping:
      bosh-state: bosh-state-updated
      terraform-state: terraform
    params:
      ENVIRONMENT_NAME: "b-drats-prs/jumpbox"
      BOSH_OPERATION: "delete-env"
      GCP_SERVICE_ACCOUNT_KEY: ((bosh_director.json_key))
    ensure:
      put: bosh-state-b-drats
      params:
        data: bosh-state-updated
  - put: terraform
    params:
      terraform_source: bosh-disaster-recovery-acceptance-tests-prs/ci/infrastructure/terraform/gcp
      env_name: b-drats-prs
      action: destroy
      vars:
        environment_name: b-drats-prs
        gcp_service_account_key: ((gcp/service_accounts/infrastructure.json_key))
    get_params:
      action: destroy
