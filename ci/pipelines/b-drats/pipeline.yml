---
#!  WARNING: this pipeline is automatically set and manual changes will go away. 
#!
#!  To set pipeline manually run: 
#!    fly set-pipeline -p b-drats -c <(ytt -f ci/pipelines/b-drats/pipeline.yml --data-values-file ci/pipelines/b-drats/values.yml)

#@ load("@ytt:data", "data")

groups:
- name: bump
  jobs:
    - bump-ci-tasks

- name: test
  jobs:
    - unclaim-env
    - merge-pr
    - run-b-drats
    - claim-env

vault_creds: &vault_creds
  url: ((vault/server.url))
  role_id: ((vault/resource_credentials.role_id))
  secret_id: ((vault/resource_credentials.secret_id))

attempts: &number_of_retries 2

resource_types:
- name: pcf-pool
  type: registry-image
  source:
    repository: cftoolsmiths/toolsmiths-envs-resource
    tag: latest

- name: pull-request
  type: docker-image
  source:
    repository: cryogenics/pr-queue-resource

resources:
- name: cryogenics-essentials
  type: registry-image
  source:
    repository: cryogenics/essentials

- name: bbr-artefacts
  type: s3
  icon: aws
  source:
    bucket: bosh-backup-and-restore-builds
    region_name: eu-west-1
    regexp: bbr-(.*)\.tar
    access_key_id: ((aws_credentials.access_key_id))
    secret_access_key: ((aws_credentials.secret_access_key))

- name: jammy-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-jammy-go_agent

- name: cryogenics-ci
  type: git
  source:
    uri: git@github.com:pivotal/cryogenics-concourse-tasks.git
    private_key: ((github.ssh_key))
    branch: main

- name: env
  icon: pool
  type: pcf-pool
  source:
    api_token: ((toolsmiths.api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: #@ data.values.tas_versions[-1]["pool_name"]

- name: bosh-disaster-recovery-acceptance-tests-prs
  icon: source-pull
  type: pull-request
  source:
    base_branch: master
    repository: cloudfoundry/bosh-disaster-recovery-acceptance-tests
    access_token: ((github.access_token))
    disable_forks: true
    autosync_pr: true
    watch_checks_interval: "600"
    assign_to: "@me"

- name: bosh-disaster-recovery-acceptance-tests
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/bosh-disaster-recovery-acceptance-tests
    private_key: ((github.ssh_key))

- name: bosh-disaster-recovery-acceptance-tests-bump-ci-tasks
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-disaster-recovery-acceptance-tests
    private_key: ((github.ssh_key))



jobs:
- name: claim-env
  plan:
  - get: bosh-disaster-recovery-acceptance-tests-prs
    trigger: true
    version: every
  - put: env
    params:
      action: claim

- name: run-b-drats
  serial: true
  plan:
  - in_parallel:
    - get: bosh-disaster-recovery-acceptance-tests-prs
      passed:
        - claim-env
    - get: env
      trigger: true
      passed:
        - claim-env
    - get: cryogenics-ci
    - get: jammy-stemcell
    - get: bbr-artefacts
      params:
        unpack: true
  - in_parallel:
    - put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: pending
        context: b-drats
    - task: create-b-drats-config
      file: cryogenics-ci/tasks/toolsmiths/generate-b-drats-config-from-tas-env/task.yml
      input_mapping:
        repo: cryogenics-ci
        env: env
        stemcell: jammy-stemcell
      params:
        INCLUDE_DEPLOYMENT_TESTCASE: true
        INCLUDE_TRUNCATE_DB_BLOBSTORE_TESTCASE: true
        INCLUDE_CREDHUB_TESTCASE: true
        TIMEOUT_IN_MINUTES: 2_880 #! 48h
      output_mapping:
        config: b-drats-config
    - load_var: env-metadata
      file: env/metadata
      format: json
  - task: run-b-drats
    attempts: *number_of_retries
    privileged: true
    file: bosh-disaster-recovery-acceptance-tests-prs/ci/tasks/run-b-drats/task.yml
    params:
      JUMPBOX_IP: ((.:env-metadata.ops_manager_public_ip))
      JUMPBOX_PRIVATE_KEY: ((.:env-metadata.ops_manager_private_key))
      JUMPBOX_USER: ubuntu
      BBR_BINARY: bbr-binary-release/releases/bbr
      SSH_ALIVE_INTERVAL: 60 #! in seconds
      GINKGO_TIMEOUT: 48h0m0s #! 48h to be consistent with TIMEOUT_IN_MINUTES in the b-drats test config from the previous task.
    input_mapping:
      bbr-binary-release: bbr-artefacts
      bosh-disaster-recovery-acceptance-tests: bosh-disaster-recovery-acceptance-tests-prs
      b-drats-integration-config: b-drats-config
    on_failure:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: failure
        context: b-drats
    on_success:
      put: bosh-disaster-recovery-acceptance-tests-prs
      params:
        path: bosh-disaster-recovery-acceptance-tests-prs
        status: success
        context: b-drats

- name: merge-pr
  plan:
  - get: bosh-disaster-recovery-acceptance-tests-prs
    trigger: true
    passed:
      - run-b-drats
  - put: bosh-disaster-recovery-acceptance-tests-prs
    params:
      merge: true

- name: unclaim-env
  plan:
  - get: env
    trigger: true
    passed:
      - run-b-drats
  - put: env
    params:
      env_file: env/metadata
      action: unclaim

- name: bump-ci-tasks
  plan:
    - in_parallel:
      - get: cryogenics-essentials
        trigger: true
      - get: cryogenics-ci
      - get: bosh-disaster-recovery-acceptance-tests
    - in_parallel:
      - load_var: cryogenics-essentials-version
        file: cryogenics-essentials/tag
      - task: bump-tasks
        file: cryogenics-ci/deps-automation/bump-concourse-tasks/task.yml
        input_mapping:
          repo: bosh-disaster-recovery-acceptance-tests
          image: cryogenics-essentials
        output_mapping:
          repo: bosh-disaster-recovery-acceptance-tests
        params:
          TASKS_FOLDER: ci/tasks/run-b-drats
    - put: bosh-disaster-recovery-acceptance-tests-bump-ci-tasks
      params:
        repository: bosh-disaster-recovery-acceptance-tests
        branch: &bump-ci-task-branch bump-cryogenics-essentials-to-v((.:cryogenics-essentials-version))
        force: true
    - task: create-pull-request
      file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
      params:
        BASE: main
        BRANCH: *bump-ci-task-branch
        LABELS: dependencies
        TITLE: Bump cryogenics/essentials to v((.:cryogenics-essentials-version))
        MESSAGE: |
          This is an automatically generated Pull Request from the Cryogenics CI Bot.
          I have detected a new version of [cryogenics/essentials](https://hub.docker.com/r/cryogenics/essentials/tags) and automatically bumped
          this package to benefit from the latest changes.
          If this does not look right, please reach out to the [#mapbu-cryogenics](https://vmware.slack.com/archives/C01DXEYRKRU) team.
      input_mapping:
        source-repo: bosh-disaster-recovery-acceptance-tests-bump-ci-tasks