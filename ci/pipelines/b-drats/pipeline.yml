---
resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource
    username: ((docker.username))

resources:
- name: bosh-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment.git

- name: jumpbox-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/jumpbox-deployment.git

- name: bosh-disaster-recovery-acceptance-tests
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/bosh-disaster-recovery-acceptance-tests.git
    private_key: ((github_deploy_key_bosh-disaster-recovery-acceptance-tests.private_key))

- name: golang-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-package-golang-release.git

- name: bbr-binary-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github_read_write_token))

- name: terraform
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: bbr-pipeline
      prefix: terraform-state.tfstate
      credentials: ((gcp_credentials_json))

- name: gcs-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-jammy-go_agent

- name: director-state
  type: gcs-resource
  source:
    bucket: bbr-pipeline
    json_key: ((gcp_credentials_json))
    versioned_file: b-drats/director/state.json
    initial_content_text: "{}"
    initial_version: "1"

- name: director-creds
  type: gcs-resource
  source:
    bucket: bbr-pipeline
    json_key: ((gcp_credentials_json))
    versioned_file: b-drats/director/creds.yml
    initial_content_text: ""
    initial_version: "1"

- name: jumpbox-state
  type: gcs-resource
  source:
    bucket: bbr-pipeline
    json_key: ((gcp_credentials_json))
    versioned_file: b-drats/jumpbox/state.json
    initial_content_text: "{}"
    initial_version: "1"

- name: jumpbox-creds
  type: gcs-resource
  source:
    bucket: bbr-pipeline
    json_key: ((gcp_credentials_json))
    versioned_file: b-drats/jumpbox/creds.yml
    initial_content_text: ""
    initial_version: "1"

- name: weekly
  type: time
  source:
    initial_version: true
    start: 7:00 -0700
    stop: 7:30 -0700
    days: [ Saturday ]

jobs:
- name: bump-deps
  plan:
  - in_parallel:
    - get: bosh-disaster-recovery-acceptance-tests
    - get: golang-release
    - get: weekly
      trigger: true
  - task: bump-deps
    file: golang-release/ci/tasks/shared/bump-deps.yml
    input_mapping:
      input_repo: bosh-disaster-recovery-acceptance-tests
    output_mapping:
      output_repo: bosh-disaster-recovery-acceptance-tests
    params:
      DESIRED_GO_MAJOR_MINOR: 1.22
  - put: bosh-disaster-recovery-acceptance-tests
    params:
      repository: bosh-disaster-recovery-acceptance-tests

- name: deploy-b-drats
  serial: true
  serial_groups: [ prs ]
  plan:
  - in_parallel:
    - get: bosh-deployment
    - get: jumpbox-deployment
    - get: bosh-disaster-recovery-acceptance-tests
      trigger: true
    - get: director-creds
    - get: director-state
    - get: jumpbox-creds
    - get: jumpbox-state
    - get: bbr-binary-release
      trigger: true
  - put: terraform
    params:
      terraform_source: bosh-disaster-recovery-acceptance-tests/ci/infrastructure/terraform/gcp/
      env_name: b-drats
      delete_on_failure: true
      vars:
        projectid: cf-bosh-concourse
        environment_name: b-drats
        gcp_service_account_key: ((gcp_credentials_json))
    get_params:
      output_statefile: true
  - task: jumpbox-create-env
    file: bosh-disaster-recovery-acceptance-tests/ci/tasks/jumpbox-operation/task.yml
    input_mapping:
      terraform-state: terraform
    params:
      ENVIRONMENT_NAME: "b-drats/jumpbox"
      BOSH_OPERATION: "create-env"
      GCP_SERVICE_ACCOUNT_KEY: ((gcp_credentials_json))
    ensure:
      in_parallel:
      - put: jumpbox-creds
        params:
          file: jumpbox-creds/creds.yml
      - put: jumpbox-state
        params:
          file: jumpbox-state/state.json
  - task: bosh-create-env
    file: bosh-disaster-recovery-acceptance-tests/ci/tasks/bosh-operation/task.yml
    input_mapping:
      terraform-state: terraform
    params:
      ENVIRONMENT_NAME: "b-drats/director"
      JUMPBOX_ENVIRONMENT_NAME: "b-drats/jumpbox"
      DIRECTOR_NAME: "b-drats"
      BOSH_OPERATION: "create-env"
      GCP_SERVICE_ACCOUNT_KEY: ((gcp_credentials_json))
    ensure:
      in_parallel:
      - put: director-creds
        params:
          file: director-creds/creds.yml
      - put: director-state
        params:
          file: director-state/state.json
  - task: update-b-drats-cloud-config
    file: bosh-disaster-recovery-acceptance-tests/ci/tasks/update-b-drats-cloud-config/task.yml
    input_mapping:
      cloud-config: bosh-deployment
      terraform-state: terraform
    params:
      CLOUD_CONFIG_PATH: gcp/cloud-config.yml
      BOSH_CLIENT: admin
  - task: update-b-drats-resurrection
    file: bosh-disaster-recovery-acceptance-tests/ci/tasks/update-b-drats-resurrection/task.yml
    input_mapping:
      terraform-state: terraform
    params:
      RESURRECTION: "off"
      BOSH_CLIENT: admin

- name: run-b-drats
  serial: true
  serial_groups: [ prs ]
  plan:
  - in_parallel:
    - get: bosh-disaster-recovery-acceptance-tests
      passed: [ deploy-b-drats ]
      trigger: true
    - get: bosh-deployment
      passed: [ deploy-b-drats ]
    - get: jumpbox-deployment
      passed: [ deploy-b-drats ]
    - get: bbr-binary-release
      trigger: true
      passed: [ deploy-b-drats ]
    - get: terraform
      passed: [ deploy-b-drats ]
      params:
        output_statefile: true
    - get: gcs-stemcell
    - get: director-creds
    - get: jumpbox-creds
  - task: generate-b-drats-integration-config
    file: bosh-disaster-recovery-acceptance-tests/ci/tasks/generate-b-drats-integration-config/task.yml
    input_mapping:
      terraform-state: terraform
      stemcell: gcs-stemcell
    params:
      CREDHUB_SERVER: https://10.0.0.6:8844
  - task: run-b-drats
    file: bosh-disaster-recovery-acceptance-tests/ci/tasks/run-b-drats/task.yml

- name: destroy-b-drats
  serial: true
  serial_groups: [ prs ]
  plan:
  - in_parallel:
    - get: bosh-deployment
      passed: [ run-b-drats ]
    - get: jumpbox-deployment
      passed: [ run-b-drats ]
    - get: terraform
      passed: [ run-b-drats ]
      params:
        output_statefile: true
    - get: bbr-binary-release
      trigger: true
      passed: [ run-b-drats ]
    - get: bosh-disaster-recovery-acceptance-tests
      passed: [ run-b-drats ]
      trigger: true
    - get: director-creds
    - get: director-state
    - get: jumpbox-creds
    - get: jumpbox-state
  - task: bosh-delete-env
    file: bosh-disaster-recovery-acceptance-tests/ci/tasks/bosh-operation/task.yml
    input_mapping:
      terraform-state: terraform
    params:
      ENVIRONMENT_NAME: "b-drats/director"
      JUMPBOX_ENVIRONMENT_NAME: "b-drats/jumpbox"
      DIRECTOR_NAME: "b-drats"
      BOSH_OPERATION: "delete-env"
      GCP_SERVICE_ACCOUNT_KEY: ((gcp_credentials_json))
    ensure:
      in_parallel:
      - put: director-creds
        params:
          file: director-creds/creds.yml
      - put: director-state
        params:
          file: director-state/state.json
  - task: jumpbox-delete-env
    file: bosh-disaster-recovery-acceptance-tests/ci/tasks/jumpbox-operation/task.yml
    input_mapping:
      terraform-state: terraform
    params:
      ENVIRONMENT_NAME: "b-drats/jumpbox"
      BOSH_OPERATION: "delete-env"
      GCP_SERVICE_ACCOUNT_KEY: ((gcp_credentials_json))
    ensure:
      in_parallel:
      - put: jumpbox-creds
        params:
          file: jumpbox-creds/creds.yml
      - put: jumpbox-state
        params:
          file: jumpbox-state/state.json
  - put: terraform
    params:
      terraform_source: bosh-disaster-recovery-acceptance-tests/ci/infrastructure/terraform/gcp
      env_name: b-drats
      action: destroy
      vars:
        projectid: cf-bosh-concourse
        environment_name: b-drats
        gcp_service_account_key: ((gcp_credentials_json))
    get_params:
      action: destroy
